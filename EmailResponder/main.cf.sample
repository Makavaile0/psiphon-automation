smtp_helo_name = sender.psiphon3.com

# We run two instances of SMTPD: one for mail from the internet, one from mail locally.
# The latter gets special overridden settings.
myhostname = mx.psiphon3.com

smtpd_banner = ESMTP $mail_name $myhostname

# Disable local mail notifications
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# Replace with the SpamHaus Data Query Service ID
spamhaus_dqs_id = ...

#
# TLS parameters
#
# See: http://www.postfix.org/TLS_README.html

# Set these always
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# If you don't want to use TLS, use these lines:
#smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
#smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
#smtpd_use_tls=no

# To use TLS, use these lines:
smtpd_tls_cert_file=/etc/postfix/mx.psiphon3.com.crt
smtpd_tls_key_file=/etc/postfix/mx.psiphon3.com.key
smtpd_tls_CAfile=/etc/postfix/mx.psiphon3.com.intermediate
smtpd_tls_received_header=yes
tls_random_source=dev:/dev/urandom

# Postfix runs in a chroot jail, so it can't access /etc/ssl/certs. Instead use:
smtp_tls_CAfile=/etc/ssl/certs/ca-certificates.crt

# These two can be set to 'may' to use encryption opportunistically, but not require it.
# Note that this level of security will mean that connections to and from some
# mail servers will fail. It works with all of the major webmail providers,
# though. It's probably best to not reply at all than to reply unencrypted to
# a sketchy mail provider that might be in-country.
smtpd_tls_security_level=encrypt
smtp_tls_security_level=verify

# Handy for debugging:
#smtp_tls_loglevel=2
#smtpd_tls_loglevel=2

# Avoid POODLE (etc.) vulnerabilities by forbidding SSLv2 and SSLv3
smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3
smtpd_tls_protocols = !SSLv2, !SSLv3
smtp_tls_mandatory_protocols = $smtpd_tls_mandatory_protocols
smtp_tls_protocols = $smtpd_tls_protocols

# Prevent weak cipher use
smtpd_tls_mandatory_exclude_ciphers = aNULL, eNULL, EXPORT, DES, RC4, MD5, PSK, aECDH, EDH-DSS-DES-CBC3-SHA, EDH-RSA-DES-CDC3-SHA, KRB5-DE5, CBC3-SHA
smtpd_tls_exclude_ciphers = $smtpd_tls_mandatory_exclude_ciphers

# Use "high"-security ciphers, and use our preference order, rather than the client's
tls_preempt_cipherlist = yes
smtpd_tls_mandatory_ciphers = high
smtp_tls_mandatory_ciphers = $smtpd_tls_mandatory_ciphers
smtpd_tls_ciphers = $smtpd_tls_mandatory_ciphers
smtp_tls_ciphers = $smtp_tls_mandatory_ciphers

# /TLS

alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases

mydestination = localhost.$mydomain localhost
relayhost =
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all

# Prevent attempts to use IPv6. Avoids unnecessary failed attempts.
inet_protocols = ipv4

# Notify postmaster of all errors
# Note that if this results in too much pointless mail, we can just remove these values.
#notify_classes = bounce, 2bounce, delay, policy, protocol, resource, software
#notify_classes = delay, policy, resource, software
notify_classes =


#
# SMTPD (receiving) config
#

# Tarpit those bots/clients/spammers who send errors or scan for accounts
smtpd_error_sleep_time = 20s
smtpd_soft_error_limit = 1
smtpd_hard_error_limit = 3
smtpd_junk_command_limit = 2

#
# Anti-spam rules
# See, e.g., http://www.normyee.net/blog/2012/12/28/postfix-anti-spam-configuration-december-2012/
#

smtpd_helo_restrictions =
        reject_non_fqdn_helo_hostname,
        reject_invalid_helo_hostname,
        reject_rhsbl_helo ${spamhaus_dqs_id}.zen.dq.spamhaus.net

# Block clients that speak too early.
smtpd_data_restrictions = reject_unauth_pipelining

smtpd_client_restrictions =
        reject_rbl_client b.barracudacentral.org
# Can't use reject_unknown_client_hostname because our load balancer hides incoming IP.

smtpd_sender_restrictions =
        reject_unknown_sender_domain,
        reject_unknown_address,
        reject_rhsbl_reverse_client ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,
        reject_rbl_client b.barracudacentral.org

# Reject messages that don't meet these criteria
# The `10023` is the postgrey greylisting service.
smtpd_recipient_restrictions =
   permit_mynetworks,
   reject_invalid_hostname,
   reject_non_fqdn_sender,
   reject_non_fqdn_recipient,
   reject_unknown_sender_domain,
   reject_unknown_recipient_domain,
   reject_unauth_destination,
   reject_unauth_pipelining,
   reject_invalid_helo_hostname,
   reject_unknown_helo_hostname,
   reject_non_fqdn_helo_hostname,
# Maybe include this...? It forces a request to the incoming server to validate the sender address.
   reject_unverified_sender,

   check_helo_access hash:/home/mail_responder/helo_access,
   check_sender_access hash:/home/mail_responder/sender_access,

   # TODO: Check that list.dnswl.org still exists (it's failing right now)
   permit_dnswl_client list.dnswl.org,

   # postgrey
   check_policy_service inet:127.0.0.1:10023,

   reject_rhsbl_reverse_client ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,
   reject_rhsbl_sender ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,
   reject_rhsbl_client ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,

   reject_rbl_client b.barracudacentral.org,
   reject_rbl_client ${spamhaus_dqs_id}.zen.dq.spamhaus.net,
   reject_rbl_client ${spamhaus_dqs_id}.xbl.dq.spamhaus.net,
   reject_rbl_client dnsbl.sorbs.net,
   reject_rbl_client bl.spamcop.net,

   permit

# Note: It would be nice to do a SPF check above, but because we're behind a load balancer
# we can't actually see the remote IP (and we're doing TCP forwarding, so there's no
# fancy added header or anything).

# Without this, some other rules can be bypassed.
smtpd_helo_required = yes

smtpd_relay_restrictions =
   permit_mynetworks,
   reject_invalid_hostname,
   reject_non_fqdn_sender,
   reject_non_fqdn_recipient,
   reject_unknown_sender_domain,
   reject_unknown_recipient_domain,
   reject_unauth_destination,
   reject_unauth_pipelining,
   reject_invalid_helo_hostname,
   reject_unknown_helo_hostname,
   reject_non_fqdn_helo_hostname,
   reject_unverified_sender,
   check_helo_access hash:/home/mail_responder/helo_access,
   check_sender_access hash:/home/mail_responder/sender_access,
   permit_dnswl_client list.dnswl.org,
   check_policy_service inet:127.0.0.1:10023,
   reject_rhsbl_reverse_client ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,
   reject_rhsbl_sender ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,
   reject_rhsbl_client ${spamhaus_dqs_id}.dbl.dq.spamhaus.net,
   reject_rbl_client b.barracudacentral.org,
   reject_rbl_client ${spamhaus_dqs_id}.zen.dq.spamhaus.net,
   reject_rbl_client ${spamhaus_dqs_id}.xbl.dq.spamhaus.net,
   reject_rbl_client dnsbl.sorbs.net,
   reject_rbl_client bl.spamcop.net,
   permit

#
# SMTP (sending) config
#

smtp_tls_note_starttls_offer = yes

# Use different sending TLS policies for different peers.
smtp_tls_policy_maps = hash:/home/mail_responder/client_tls_policy


#
# Message and queue limits
#

# Set the message size limit. Even though we override this in master.cf for our
# local-only service, it seems that we need to set it high enough here to
# accommodate our email with attachments.
message_size_limit = 41943040

# Setting this to 0 indicates that "mail delivery should be tried only once"
# http://www.postfix.org/postconf.5.html#bounce_queue_lifetime
bounce_queue_lifetime = 0
# Consider a message undeliverable when it hits this time limit
# http://www.postfix.org/postconf.5.html#maximal_queue_lifetime
maximal_queue_lifetime = 1h

#
# Remove sensitive headers
#
mime_header_checks = regexp:/home/mail_responder/header_checks
header_checks = regexp:/home/mail_responder/header_checks

#
# DKIM verification
#
# https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-dkim-with-postfix-on-debian-wheezy
milter_protocol = 2
milter_default_action = accept
smtpd_milters = inet:localhost:12301
non_smtpd_milters = inet:localhost:12301


#
# Supported addresses
#

# This file contains the domains we support. Its contents will replace this path.
# We rely on an external command (cron job) to reload the postfix config when
# this file changes.
# NOTE: the user home path here might differ with your particular setup.
virtual_alias_domains = /home/mail_responder/postfix_responder_domains
virtual_alias_maps = hash:/home/mail_responder/postfix_address_maps
